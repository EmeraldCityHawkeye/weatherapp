{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","components/Chart.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["Titles","react_default","a","createElement","className","Component","Form","onSubmit","this","props","getWeather","type","name","placeholder","Weather","city","country","temperature","humidity","description","onClick","getForecast","Chart","data","labels","datasets","queue","label","backgroundColor","hoverBackgroundColor","borderColor","hoverBorderColor","temp_max","hum","wind_speed","es","width","height","options","maintainAspectRatio","duration","getPresent","Error","error","App","state","undefined","loading","forecast","_callee","e","dt","i","date_","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","then","_this","setState","json","sent","list","console","log","length","dt_txt","split","includes","push","main","wind","shift","temp","weather","stop","components_Titles","components_Form","role","Error_Error","Chart_Chart","components_Weather","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58209170.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Titles extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"text-center mt-5\">\n\t\t\t\t<h1>Weather Finder</h1>\n\t\t\t\t<p className=\"lead mb-20\"><b>Find out Temperature conditions and more!..</b></p>\n\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Titles;","import React, {Component} from \"react\";\n\nclass Form extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<form onSubmit = {this.props.getWeather} className=\"form-inline text-center\">\n\t\t\t\t<div className=\"form-group mx-auto\">\n\t\t\t\t\t\t\t\t\n                        <input type=\"text\" name=\"city\" className=\"form-control mr-3 mb-3\" placeholder=\"City..\"/>\n                                                \n\t\t\t\t\t\t<input type=\"text\" name=\"country\" className=\"form-control mr-3 mb-3\" placeholder=\"Country..\"/>\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-info mb-3\">Get Weather <i className=\"fas fa-arrow-alt-circle-right ml-1\"></i></button>\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\t\n\t\t\t</form>\n\n\t\t);\n\t}\n};\n\nexport default Form;","import React, { Component } from \"react\";\n\nclass Weather extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"container pt-2 mt-3 col-lg-8 mx-auto text-center\">\n                {this.props.city && this.props.country &&\n                    <h4>Present Conditions</h4>\n                }\n\t\t\t\t<table className=\"table pb-3 mb-2\">\n  \n\t\t\t\t  <tbody>\n\t\t\t\t    {this.props.city && this.props.country &&\n                    \n\t\t\t\t    <tr>\n\t\t\t\t      \n\t\t\t\t      <td className=\"text-right mx-auto\"><b>Location:</b></td>\n\t\t\t\t      <td className=\"text-left mx-auto\">{ this.props.city}, { this.props.country}</td>\n\t\t\t\t      \n\t\t\t\t    </tr>\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t    { this.props.temperature && \t\t\t\t\t\t\n\t\t\t\t    <tr>\n\t\t\t\t      \n\t\t\t\t      <td className=\"text-right\"><b>Temperature:</b></td>\n\t\t\t\t      <td className=\"text-left\">{ this.props.temperature}&#8451;</td>\n\t\t\t\t      \n\t\t\t\t    </tr>\n\t\t\t\t    }\n\n\t\t\t\t    { this.props.humidity && \t\t\t\t\t\t\n\t\t\t\t    <tr>\n\t\t\t\t      \n\t\t\t\t      <td className=\"text-right\"><b>Humidity:</b></td>\n\t\t\t\t      <td className=\"text-left\">{ this.props.humidity} %</td>\n\t\t\t\t      \n\t\t\t\t    </tr>\n\t\t\t\t    }\t\n\n\t\t\t\t    { this.props.description && \t\t\t\t\t\t\n\t\t\t\t    <tr className=\"mb-5\">\n\t\t\t\t      \n\t\t\t\t      <td className=\"text-right\"><span className=\"text-bold\">Conditions:</span></td>\n\t\t\t\t      <td className=\"text-left\">{ this.props.description}</td>\n\t\t\t\t  \n\t\t\t\t    </tr>\n\t\t\t\t\t\t\t\t\n\t\t\t\t    }\t\n\t\t\t\t\t\n\n\t\t\t\t    {/* { this.props.error && \t\t\t\t\t\t\n\t\t\t\t    <tr>\n\t\t\t\t      \n\t\t\t\t      \n\t\t\t\t      <td className=\"text-center\">{ this.props.error}</td>\n\t\t\t\t      \n\t\t\t\t    </tr>\n\t\t\t\t    }\t\t */}\n\n\t\t\t\t\t\t\n\t\t\t\t    \n\t\t\t\t  </tbody>\n\t\t\t\t</table>\n\t\t\t\t{this.props.city && this.props.country &&\n                   <div className=\"container text-center\">\n                        <button className=\"btn btn-light\" onClick={this.props.getForecast}>Forecast<i className=\"fas fa-cloud-sun-rain ml-1\"></i></button>\n                   </div>\n                }\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Weather;","import React, { Component } from 'react';\nimport {Bar} from 'react-chartjs-2'; \n\nexport default class Chart extends Component {\n    \n    render() {\n        const data = {\n            labels: this.props.labels,\n            datasets: [\n              {\n                queue: 'queue1',\n                label: 'Temperature (\\xB0C)',\n                // \n                backgroundColor: '#FFC1BF',\n                hoverBackgroundColor: '#F98783',\n                borderColor: '#FB7671',\n                hoverBorderColor: '#D73933',\n                data: this.props.temp_max\n              },\n              {\n                queue: 'queue2',\n                label: 'Humidity (%)',\n                backgroundColor: '#AAE4FF',\n                hoverBackgroundColor: '#62CDFF',\n                borderColor: '#26ADEC',\n                hoverBorderColor: '#1E86B6',\n                data: this.props.hum  \n              },\n              {\n                queue: 'queue3',\n                label: 'Windspeed (m/s)',\n                backgroundColor: '#FFFFAE',\n                hoverBackgroundColor: '#FFFF6F',\n                borderColor: '#D8D831',\n                hoverBorderColor: '#D8D831',\n                data: this.props.wind_speed \n              }\n            ]\n          }    \n        return (\n            <div>\n                <Bar\n                data={data}\n                width={120}\n                height={70}\n                options={{\n                    maintainAspectRatio: true,\n                    duration: 2000\n                }}\n                /> \n                <div className=\"text-center\">\n                    <button className=\"btn btn-light\" onClick={this.props.getPresent}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                </div>    \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Error extends Component {\n    render() {\n        return (\n            <div className=\"text-center\">\n                <p className=\"lead\">{this.props.error}</p>    \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport Titles from './components/Titles';\n\nimport Form from \"./components/Form\";\n\nimport Weather from \"./components/Weather\";\n\nimport Chart from './components/Chart';\n\nimport Error from './components/Error';\n\nimport './App.css';\n\nconst API_KEY = \"d388cc9c41e5c0d4bf75a2ab328a574f\";\n\n\n\nclass App extends Component {\n  \n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    loading: false,\n    description: undefined,\n    error: undefined,\n    labels: [],\n    temp_max: [],\n    hum: [],\n    wind_speed: [],\n    forecast: false\n  } \n  \n    getWeather = async (e) =>{\n\n    e.preventDefault();\n\n    \n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=d388cc9c41e5c0d4bf75a2ab328a574f&units=metric`)\n                      .then(this.setState({\n                        loading: true\n                      }))     \n                      .then((data) => {\n                        this.setState({\n                          loading: false\n                        })\n                        return data.json();\n                      });\n    \n    //const data = await api_call.json();\n  \n  \n    if(city && country){\n        \n        if(!data.list){\n              this.setState({\n\n              temperature: undefined,\n              city: undefined,\n              country: undefined,\n              humidity: undefined,\n              description: undefined,\n              error: \"Unable to get weather info!... Please check the values entered...\"\n\n              });\n\n        }else{\n            \n            console.log(data);\n            let labels = [];\n            let temp_max = [];\n            let hum = [];\n            let wind_speed = [];\n            let dt; \n            for(let i = 0; i<data.list.length; i++){\n                dt = data.list[i];\n                let date_ = dt.dt_txt.split(' ')[0];\n               \n                  if(!labels.includes(date_) && dt.dt_txt.split(' ')[1] === '12:00:00'){\n                    // console.log(dt.dt_txt.split(' ')[1]);\n                    labels.push(date_);\n                    temp_max.push(dt.main['temp_max']);\n                    hum.push(dt.main['humidity']);\n                    wind_speed.push(dt.wind['speed']);\n                  }\n            } \n           \n            if(labels.length !== temp_max.length){\n              labels.shift();\n            }\n            // console.log(labels);\n            // console.log(temp_max);\n            // console.log(hum);\n            // console.log(wind_speed);\n\n              this.setState({\n\n                  temperature: data.list[0].main.temp,\n                  city: data.city['name'],\n                  country: data.city['country'],\n                  humidity: data.list[0].main.humidity,\n                  description: data.list[0].weather[0].description,\n                  error: \"\",\n                  labels: labels,\n                  temp_max: temp_max,\n                  hum: hum,\n                  wind_speed: wind_speed\n              \n              });\n\n              console.log(data.city.name);\n\n          }\n        \n  }else{\n\n      this.setState({\n\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: \"Please enter some values!\"\n\n    });\n  \n}\n}\n  getForecast = () => {\n    this.setState({\n      forecast: true\n    });\n  }\n\n  getPresent = () => {\n    this.setState({\n      forecast: false\n    });\n  }\n\n\n  render(){\n  return (\n    <div className=\"wrapper\">\n      <Titles />\n      <div className=\"col-md-10 pt-1 mx-auto\">\n        <div className=\"jumbotron pt-4 \">\n          \n          <Form getWeather={this.getWeather}/>\n          {this.state.loading ? \n          <div className=\"container text-center pt-5 pb-5 mt-5 mb-5\">\n            \n            <div className=\"spinner-border text-dark\" role=\"status\">\n              <span className=\"sr-only\">Loading...\n              </span>\n            </div>\n          </div> \n            : this.state.error ? \n              <Error error={this.state.error}/>\n              :\n              this.state.forecast ? <Chart \n                  labels={this.state.labels}\n                  temp_max={this.state.temp_max}\n                  hum={this.state.hum}\n                  wind_speed={this.state.wind_speed}\n                  getPresent={this.getPresent}\n              /> : <Weather \n                  temperature={this.state.temperature}\n                  city={this.state.city}\n                  country={this.state.country}\n                  humidity={this.state.humidity}\n                  description={this.state.description}\n                  error={this.state.error}\n                  getForecast={this.getForecast}\n            />}\n        </div>\n      </div>\n    </div>\n  );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}